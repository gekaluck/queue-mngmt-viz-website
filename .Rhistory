shiny::runApp()
runApp()
runApp()
setwd('C:\\Users\\Yevhenii Lukianchuk\\OneDrive\\Документы\\Carey\\Fall I\\RA\\FINALLY\')
PYTHON_DEPENDENCIES = c('numpy','simpy==3.0.13','pandas==0.24.2')
virtualenv_dir = Sys.getenv('VIRTUALENV_NAME')
python_path = Sys.getenv('PYTHON_PATH')
# For running in local enviroment, please comment out the line below
#reticulate::virtualenv_create(envname = virtualenv_dir, python = python_path)
# For publishing to ShinyApps server, please uncomment the line above
# Installing neccessary packages
reticulate::virtualenv_install(virtualenv_dir, packages = PYTHON_DEPENDENCIES)
# Initiate the python virtual enviroment
reticulate::use_virtualenv(virtualenv_dir, required = T)
# Load the backend python code
reticulate::source_python('sim.py')
# Using python function to make data frame needed to generate plots
dfMaker <- function(Ra,Rp,SIM_TIME,NUM_SERVERS,ADist,PDist,Ra_sd,Rp_sd){
data <- combined(Ra,Rp,SIM_TIME,NUM_SERVERS,ADist,PDist,Ra_sd,Rp_sd)
Iq_sep <- data.frame(x = data[4][[1]],y = as.numeric(unlist(data[5][[1]])))
Iq_sep$mode <- as.factor("Allocation to shortest line")
Iq_pool <- data.frame(x = data[6][[1]],y = as.numeric(unlist(data[7][[1]])))
Iq_pool$mode <- as.factor("Customer Pooling")
Iq_rand <- data.frame(x = data[8][[1]],y = as.numeric(unlist(data[9][[1]])))
Iq_rand$mode <- as.factor("Random Allocation")
Iq <- rbind(Iq_rand,Iq_sep,Iq_pool)
Iq$cat <- as.factor("Iq")
utl_sep <- data.frame(x = data[10][[1]],y = as.numeric(unlist(data[11][[1]])))
utl_sep$mode <- as.factor("Allocation to shortest line")
utl_pool <- data.frame(x = data[12][[1]],y = as.numeric(unlist(data[13][[1]])))
utl_pool$mode <- as.factor("Customer Pooling")
utl_rand <- data.frame(x = data[14][[1]],y = as.numeric(unlist(data[15][[1]])))
utl_rand$mode <- as.factor("Random Allocation")
utl <- rbind(utl_rand,utl_sep,utl_pool)
utl$cat <-  as.factor("utl")
uot_pool <- data.frame(x = data[25][[1]],y = as.numeric(unlist(data[26][[1]])))
uot_pool$mode <- as.factor("Allocation to shortest line")
uot_sep <- data.frame(x = data[27][[1]],y = as.numeric(unlist(data[28][[1]])))
uot_sep$mode <- as.factor("Customer Pooling")
uot_rand <- data.frame(x = data[29][[1]],y = as.numeric(unlist(data[30][[1]])))
uot_rand$mode <- as.factor("Random Allocation")
uot <- rbind(uot_rand,uot_sep,uot_pool)
uot$cat <- as.factor("uot")
Tq_sep <- data.frame(x = data[31][[1]],y = as.numeric(unlist(data[32][[1]])))
Tq_sep$mode <- as.factor("Allocation to shortest line")
Tq_pool <- data.frame(x = data[33][[1]],y = as.numeric(unlist(data[34][[1]])))
Tq_pool$mode <- as.factor("Customer Pooling")
Tq_rand <- data.frame(x = data[35][[1]],y = as.numeric(unlist(data[36][[1]])))
Tq_rand$mode <- as.factor("Random Allocation")
Tq <- rbind(Tq_rand,Tq_sep,Tq_pool)
Tq$cat <- as.factor("Tq")
df <- rbind(Iq,utl,uot,Tq)
return(df)
}
# Making the plot for Iq
plotMaker_Iq <- function(Ra,Rp,NUM_SERVERS,df){
df <- df %>% arrange()
p <- ggplotly(ggplot(data=df%>%filter(cat == 'Iq'))+
aes(x = as.numeric(x), y = as.numeric(y), color = mode)+
theme_set(theme_stata())+
geom_line()+
labs(x = 'Time', y = 'Number of Customer in Queue',
# 'Number of Customer in Queue','\n',
title = paste('Avg. I.A time: ',Ra, ', Avg. processing time: ',Rp,',  # of Servers: ',NUM_SERVERS))+
theme(plot.title = element_text(size = rel(1),hjust=0.5),
legend.title = element_blank(),
legend.background = element_rect(fill = "white",
colour = "white"),
axis.title=element_text(face = "bold", size = rel(1)),
plot.background = element_rect(fill = "white"),
text = element_text(family = "Arial")) +
scale_colour_manual(values =c('#8ac926','#1982c4','#f8961e'))
setwd('C:\\Users\\Yevhenii Lukianchuk\\OneDrive\\Документы\\Carey\\Fall I\\RA\\FINALLY')
runApp()
setwd('C:\\Users\\Yevhenii Lukianchuk\\PycharmProjects\\RA')
# setwd('C:\\Users\\Yevhenii Lukianchuk\\PycharmProjects\\RA')
.libpaths()
# setwd('C:\\Users\\Yevhenii Lukianchuk\\PycharmProjects\\RA')
.libPaths()
